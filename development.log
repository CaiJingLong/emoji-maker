# Emoji Maker 开发日志

## 版本 86

### 需求
- 将 EmojiMaker 组件与新创建的 assistStore 状态机关联

### 完成事项
1. 导入并使用 assistStore 状态管理器
2. 移除组件中原有的辅助功能相关状态和方法
3. 修改模板中的状态绑定，使用 store 中的状态
4. 更新了对齐检查逻辑，使用 store 中的方法和常量
5. 修复了重复声明的函数问题
6. 确保所有辅助功能正常工作

## 版本 85

### 需求
- 创建辅助功能状态机，优化代码结构

### 完成事项
1. 创建了 assistStore 状态机，用于管理：
   - 辅助线显示状态
   - 吸附功能状态
   - 边界显示状态
2. 将辅助功能相关的状态和逻辑从 EmojiMaker 组件中抽取出来
3. 实现了状态的自动持久化
4. 优化了状态管理的代码结构

## 版本 84

### 需求
- 优化 CSS 代码组织结构

### 完成事项
1. 将 EmojiMaker.vue 中的内联样式移动到 emojiMaker.css 文件中
2. 整理了图片图标和缩略图相关的样式
3. 确保样式的位置合理且不会与现有样式冲突
4. 提升了代码的可维护性和组织性

## 版本 83

### 需求
- 在图层列表中显示图片的缩略图，帮助快速辨识

### 完成事项
1. 移除了通用的图片SVG图标
2. 添加了图片缩略图显示功能
3. 设置了缩略图容器的固定大小（24x24像素）
4. 使用 object-fit: cover 确保图片合适地填充容器
5. 添加了圆角和背景色，提升视觉效果
6. 优化了缩略图的显示质量

## 版本 82

### 需求
- 为图层列表中的图片添加递增序号

### 完成事项
1. 添加了 getImageNumber 函数，用于计算图片序号
2. 实现了从1开始的自动递增序号
3. 序号会根据图层顺序自动更新
4. 确保序号显示在图层名称中
5. 保持了原有的国际化支持

## 版本 81

### 需求
- 修复语言文件导出问题，解决 "does not provide an export named 'default'" 错误

### 完成事项
1. 修改了语言文件的导出方式
2. 将语言对象先定义为常量，再使用 export default 导出
3. 确保了语言文件的导出符合 ES Module 规范
4. 修复了导入时的类型错误

## 版本 80

### 需求
- 在图层右键菜单中添加复制图层功能

### 完成事项
1. 在图层右键菜单中添加了"复制图层"按钮
2. 实现了 duplicateElement 函数，支持：
   - 深拷贝当前选中的图层
   - 生成新的唯一ID
   - 将新图层相对原图层右下方偏移 20px
   - 更新图层的初始中心点
   - 将新图层插入到原图层的后面
3. 添加了复制图层功能的中英文翻译
4. 优化了复制后的图层选中状态

## 版本 79

### 需求
- 修复图层拖拽排序与外部拖入功能的冲突问题

### 完成事项
1. 优化了图层列表的事件处理机制
2. 在图层列表容器级别阻止事件冒泡
3. 为所有拖拽相关事件添加了 .stop 修饰符
4. 添加了更严格的拖拽来源检查
5. 确保图层排序和外部拖入功能各自独立工作
6. 优化了代码结构，提高了可维护性

## 版本 78

### 需求
- 修复剪贴板和按键事件相关的问题

### 完成事项
1. 优化了按键事件处理，忽略单独的修饰键（Control、Shift、Alt、Meta）事件
2. 移除了重复的粘贴事件监听器，统一使用快捷键（Ctrl+V）处理粘贴操作
3. 优化了剪贴板操作的错误处理，避免不必要的错误提示
4. 改进了剪贴板 API 的使用方式，添加了更完善的错误处理机制
5. 统一了粘贴操作的处理逻辑，提高了代码的可维护性
6. 修复了 "The message port closed before a response was received" 错误
7. 优化了错误处理的方式，使用 try-catch 和静默处理替代错误日志

## 版本 77

### 需求
- 优化代码结构，将样式文件拆分为独立模块

### 完成事项
1. 创建了 src/styles 目录用于存放所有样式文件
2. 将原有的样式代码拆分为五个独立的文件：
   - emojiMaker.css：主要的布局和基础组件样式
   - layerPanel.css：图层面板相关样式
   - controlPanel.css：控制面板相关样式
   - textStyles.css：文本元素相关样式
   - animations.css：动画相关样式
3. 在 EmojiMaker.vue 中使用 @import 导入拆分后的样式文件
4. 保持了所有样式的功能完整性，没有改变任何现有的样式效果
5. 提高了代码的可维护性和复用性

## 版本 76

### 需求
- 将颜色选择器抽取为独立组件，提高代码复用性

### 完成事项
1. 创建了 ColorPicker.vue 组件，封装了颜色选择和透明度调整功能
2. 更新了 EmojiMaker.vue，使用新的 ColorPicker 组件
3. 更新了 ExportDialog.vue，使用新的 ColorPicker 组件
4. 移除了重复的颜色处理代码和样式
5. 保持了所有颜色选择器的一致性和统一性
6. 优化了代码结构，提高了可维护性

## 版本 75

### 需求
- 优化颜色选择器的透明度支持
- 统一颜色选择器的样式和交互

### 完成事项
1. 优化了颜色选择器的样式，使其更加直观
2. 统一了颜色选择器的交互方式
3. 优化了颜色预览区域的显示效果
4. 改进了透明度滑块的样式和交互
5. 确保所有颜色选择器都支持透明度调整
6. 添加了棋盘格背景以更好地显示透明度
7. 优化了颜色选择器的布局和间距

## 版本 74

### 需求
- 优化组件的 z-index 层级结构

### 完成事项
1. 重新设计了所有组件的 z-index 层级结构
2. 将画布容器的 z-index 从 10000 降低到 1，作为基础层
3. 优化了辅助线、控制面板、右键菜单等组件的层级关系
4. 提高了对话框的 z-index 到 9000/9001，确保始终显示在最上层
5. 建立了清晰的层级体系：
    - 画布容器：z-index: 1
    - 辅助线：z-index: 10
    - 控制面板：z-index: 20
    - 右键菜单：z-index: 30
    - 拖入遮罩：z-index: 100/101
    - 对话框：z-index: 9000/9001

## 版本 73

### 需求
- 优化元素的旋转和透明度功能

### 完成事项
1. 为文字和图片元素添加了旋转功能，支持 0-360 度旋转
2. 为文字和图片元素添加了透明度调整功能，支持 0-100% 的透明度
3. 优化了旋转和透明度的交互界面，添加了滑块控制
4. 添加了旋转角度和透明度百分比的实时显示
5. 确保旋转和透明度设置在导出时正确保留
6. 添加了相关的中英文翻译文本

## 版本 72

### 需求
- 优化文字背景色功能

### 完成事项
1. 优化了文字背景色的设置界面，使其更加直观
2. 添加了背景色的颜色选择器
3. 确保背景色在所有文字样式中都能正常显示
4. 优化了背景色与边框样式的兼容性
5. 确保背景色在导出时正确显示
6. 添加了相关的中英文翻译文本

## 版本 71

### 需求
- 拖入时，整体页面变暗，仅画布区域为亮色，并提示用户这里可以拖入图片

### 完成事项
1. 添加了拖放时的遮罩层效果：
   - 页面整体变暗
   - 画布区域保持高亮
   - 添加了动画箭头图标
   - 显示友好的提示文本
2. 优化了拖放交互体验：
   - 拖放悬停时画布缩放效果
   - 添加了绿色边框和阴影提示
   - 添加了平滑的过渡动画
3. 添加了国际化支持：
   - 中文提示文本
   - 英文提示文本
4. 改进了拖放状态管理：
   - 准确检测拖放进入和离开
   - 优化了状态重置逻辑

## 版本 70

### 需求
- 支持从外部拖入图片/文本并置入画布

### 完成事项
1. 添加了外部拖放功能：
   - 支持拖入图片文件到画布
   - 支持拖入文本到画布
2. 优化了拖放交互体验：
   - 拖放悬停时显示绿色边框提示
   - 拖放完成后自动恢复默认边框样式
3. 拖放内容会自动放置在画布中央
4. 使用与现有功能相同的样式和布局规则
5. 确保拖放操作的流畅性和可靠性

## 版本 69

### 需求
- 优化粘贴功能，使其在任何时候都能响应，而不仅仅是在文本输入框有焦点时

### 完成事项
1. 重构了粘贴功能的实现：
   - 使用现代的 Clipboard API 替代 execCommand
   - 直接在快捷键处理中读取剪贴板内容
2. 抽取了公共的 addElementToCanvas 函数
3. 优化了代码结构，提高了可维护性
4. 确保在以下情况下都能正常工作：
   - 使用快捷键（Ctrl+V / Command+V）
   - 使用右键菜单粘贴
   - 使用浏览器的粘贴功能
5. 改进了错误处理，添加了友好的错误提示

## 版本 68

### 需求
- 添加剪贴板支持，可以直接响应"粘贴"快捷键，注意 mac windows linux 的区别，然后置入画布

### 完成事项
1. 添加了剪贴板支持功能，支持 Ctrl+V (Windows/Linux) 和 Command+V (Mac) 快捷键
2. 实现了图片和文本的粘贴功能：
   - 优先处理图片类型的内容
   - 如果没有图片，则尝试处理文本内容
3. 支持多种粘贴方式：
   - 使用快捷键粘贴
   - 使用浏览器的右键菜单粘贴
   - 使用系统的粘贴功能
4. 粘贴的内容会自动放置在画布中央
5. 使用标准的 ClipboardEvent API，确保更好的浏览器兼容性
6. 优化了错误处理和用户体验

## v0.1.0
- 添加了清空功能
  - 添加了清空按钮，位于工具栏
  - 添加了确认对话框组件
  - 添加了清空功能的国际化支持
  - 清空操作会被记录到历史记录中

## v0.1.1
- 优化了工具栏按钮的样式
  - 减小了按钮的尺寸和内边距
  - 减小了按钮的字体大小
  - 优化了按钮的布局，不再强制等宽
  - 减小了按钮之间的间距
  - 为未来添加更多按钮预留了空间

## v0.1.2
- 优化了工具栏的布局
  - 将按钮分组，更清晰地区分功能
  - 将导出按钮单独放在右侧
  - 其他编辑相关的按钮放在左侧
  - 移除了按钮的自动换行

## 版本 67

### 需求
- 给图层列表的 item 添加右键菜单，可以快速置顶、置底

### 完成事项
1. 添加了图层项的右键菜单功能
2. 实现了置顶和置底功能
3. 添加了右键菜单的样式，包括：
   - 菜单背景和边框
   - 菜单项的悬停效果
   - 图标和文字的布局
4. 添加了相关的中英文翻译文本
5. 优化了菜单的显示位置，跟随鼠标右键点击位置
6. 点击其他区域时自动隐藏菜单
7. 确保菜单操作后能正确更新选中状态
8. 在图层右键菜单中添加"移到中央"选项
9. 实现了将图层移动到画布中央的功能
10. 使用百分比定位和 transform 实现精确居中
11. 更新了图层的初始中心点记录

## 版本 66

### 需求
- 图层管理高度虽然有上限，但是超过一定数量后不能滚动，会造成很多图层在列表上不容易看见

### 完成事项
1. 为图层列表添加了最大高度限制（300px）
2. 添加了垂直滚动条，使列表可以在内容超出时滚动
3. 优化了滚动条样式：
   - 设置了细滚动条
   - 自定义了滚动条的颜色和样式
   - 添加了滚动条的悬停效果
   - 为不同浏览器提供了一致的滚动条体验
4. 确保列表在内容较多时保持可访问性和美观性

## 版本 65

### 需求
- 编辑辅助中，添加一个新的选项，拖动时是否显示其他组件边界线

### 完成事项
1. 添加了显示其他组件边界线的开关选项
2. 实现了拖动时显示/隐藏其他组件边界线的功能
3. 添加了相关的中英文翻译文本
4. 使用 localStorage 保存边界线显示状态
5. 确保导出时不会显示边界线

## 版本 64

### 需求
- 添加新的版本记录，记录修复文字拖拽跳动的问题。

### 完成事项
1. 添加了新的版本记录，记录修复文字拖拽跳动的问题
2. 确保文字拖拽跳动的问题得到了修复

## 版本 63

### 需求
- 修复文字元素拖拽时出现跳动的问题

### 完成事项
1. 修复了文字元素拖拽开始时的位置计算问题
2. 改进了拖拽位置的计算方式，不再使用 mouseEvent.target
3. 直接使用外层的 draggable-element 元素计算位置
4. 确保拖拽位置计算不受内部文字元素的 padding 和样式影响
5. 统一了文字和图片元素的拖拽行为逻辑

## 版本 62

### 需求
- 修复图层拖动后其他图层显示灰色的问题

### 完成事项
1. 优化了图层项的样式，提高了文字和图标的对比度
2. 调整了隐藏状态的样式，确保不影响元素的背景色
3. 优化了可见性图标的颜色和交互效果
4. 确保图层的各种状态（选中、隐藏、拖动中）样式正确显示

## 版本 61

### 需求
- 将编辑辅助和图层管理放在一个纵向的手风琴空间里，支持手动开启关闭
- 优化手风琴控件的样式和交互效果

### 完成事项
1. 重构了左侧面板的结构，创建了手风琴控件
2. 删除了旧的独立面板代码
3. 优化了手风琴控件的样式，包括：
   - 添加了圆角和边框
   - 优化了标题栏的样式和悬停效果
   - 添加了展开/收起的过渡动画
   - 优化了内容区域的布局和间距
4. 实现了手风琴控件的展开/收起功能
5. 保持了原有功能的完整性，包括图层管理和编辑辅助功能
6. 优化了整体的视觉效果和用户体验

## 版本 60

### 需求
- 将编辑辅助和图层管理放在一个纵向的手风琴空间里，支持手动开启关闭

### 完成事项
1. 创建了左侧手风琴面板，包含图层管理和编辑辅助两个部分
2. 为每个部分添加了可折叠功能，支持点击标题展开/收起
3. 添加了展开/收起的动画效果
4. 优化了面板的样式，包括标题栏的悬停效果
5. 默认将两个部分都设置为展开状态
6. 添加了箭头图标，用于指示面板的展开/收起状态

## 版本 59

### 需求
- 为编辑辅助面板添加多语言支持

### 完成事项
1. 在中文语言包中添加了 "编辑辅助" 的翻译
2. 在英文语言包中添加了 "Edit Assist" 的翻译
3. 确保翻译文本在界面中正确显示

## 版本 58

### 需求
- 检查 initialCenter 的实现是否正确

### 完成事项
1. 检查了 Element 接口中的 initialCenter 属性定义
2. 确认了 onFileSelected 和 addText 函数在创建新元素时正确设置了 initialCenter
3. 确认了 updateImageSize 函数正确使用了 initialCenter 来计算新的位置
4. 确认了 onDrag 函数在元素首次移动时会自动计算并记录 initialCenter
5. 所有相关功能都已正确实现，不需要额外修改

## 版本 57

### 需求
- 修复图片缩放时位置计算错误的问题

### 完成事项
1. 改进了图片缩放时的位置计算逻辑
2. 使用 getBoundingClientRect 获取准确的元素位置和尺寸
3. 基于固定的中心点坐标来计算新的左上角位置
4. 保持图片缩放时的宽高比
5. 移除了不必要的 setTimeout 延迟操作

### 修复问题
1. 修复了图片缩放时中心点坐标漂移的问题
2. 添加了 initialCenter 属性记录初始中心点
3. 确保所有缩放操作都基于同一个固定中心点
4. 避免了由于重复计算导致的累积误差

### 修复问题
1. 为新创建的元素（图片和文字）添加了初始中心点坐标
2. 在元素首次移动时，如果没有初始中心点则自动计算并记录
3. 确保所有元素都有正确的初始中心点用于缩放操作
4. 优化了中心点的计算方式，使用容器尺寸作为参考

## 版本 56

### 需求
- 调整图片大小时以中心点为基准
- 图片缩放最小值改为 20px

### 完成事项
1. 修改了图片缩放的参考点，现在以图片中心点为基准进行缩放
2. 将图片最小尺寸从 50px 调整为 20px
3. 优化了缩放过程中的位置计算，保持图片中心点不变
4. 使用 setTimeout 确保在新尺寸应用后再更新位置，避免闪烁

## 版本 55

### 需求
- 优化辅助线和吸附功能的开关交互
- 让整个开关行都可以点击，而不仅仅是 checkbox 和文字部分

### 完成事项
1. 将点击事件从 checkbox 和 label 移到了整个 setting-item 上
2. 移除了子元素上的点击事件，避免事件重复
3. 优化了用户交互体验，使整行都能响应点击
4. 保持了开关的视觉效果不变
5. 确保了级联关系的正常工作（辅助线和吸附功能的联动）

## 版本 54

### 需求
- 图片到选中的边框下方，有一点点的距离

### 完成事项
1. 移除了行高和字体大小导致的间隙
2. 修改了图片显示方式，确保与边框完全贴合

### 修复问题
1. 分离了图片和文字元素的样式处理
2. 为图片元素单独设置了行高和字体大小为0
3. 恢复了文字元素的正常行高和字体大小
4. 确保文字边框样式不受影响

## 版本 53

### 需求
- 优化辅助线颜色，使不同元素之间的辅助线更容易区分

### 完成事项
1. 修改了容器中心辅助线的颜色，从 #FF6B6B 改为纯红色 #FF0000，使其更加醒目
2. 更新了元素辅助线的颜色方案，使用更高饱和度的颜色：
   - 鲜绿色 #00FF00
   - 纯蓝色 #0000FF
   - 洋红色 #FF00FF
   - 青色 #00FFFF
   - 橙色 #FFA500
   - 深紫色 #9400D3
   - 金色 #FFD700
   - 酸橙绿 #32CD32
   - 粉红色 #FF69B4
   - 皇家蓝 #4169E1
3. 确保所有颜色都具有高对比度，便于区分不同元素的对齐关系
4. 优化了颜色的视觉效果，使辅助线在拖动时更加清晰可见

## 版本 52

### 需求
- 触发移动时显示每个元素的边界
- 移动时的外边框和辅助线使用相同颜色
- 导出时隐藏所有边界和辅助线

### 完成事项
1. 为拖拽元素添加了边界显示功能，在拖动时自动显示
2. 使用 CSS 变量实现了边界颜色和辅助线颜色的统一
3. 优化了边界显示的过渡效果，添加了平滑的颜色变化
4. 修改了导出逻辑，确保导出时不包含任何辅助性视觉元素
5. 在导出前临时移除所有边界和辅助线，导出后自动恢复
6. 确保选中状态的边框颜色与元素的辅助线颜色保持一致

## 版本 51

### 需求
- 为每个元素分配唯一编号
- 不同元素的辅助线使用不同颜色
- 画布中心辅助线使用独特的颜色
- 将辅助线样式改为虚线

### 完成事项
1. 为 Element 接口添加了 id 字段，实现元素的唯一编号
2. 添加了一组预定义的辅助线颜色（10种不同颜色）
3. 为画布中心辅助线设置了独特的颜色（#FF6B6B）
4. 修改了辅助线样式，从实线改为虚线
5. 优化了辅助线的显示效果，使其更加美观
6. 确保新添加的元素能自动获取递增的 id
7. 实现了辅助线颜色的循环使用机制

## 版本 50

### 需求
- 针对整个容器的中心添加辅助线
- 在对齐线出现时增加吸附效果

### 完成事项
1. 添加了容器中心的垂直和水平辅助线
2. 当元素中心点接近容器中心时显示辅助线
3. 实现了元素对齐时的吸附效果
4. 优化了对齐检测的逻辑，包括与容器中心和其他元素的对齐
5. 提升了元素拖拽时的操作体验

### 修复问题
1. 优化了吸附检测的时机，在移动元素前就进行检测
2. 修改了位置计算逻辑，避免元素先移动再吸附的问题
3. 添加了临时位置更新和恢复机制，确保边界框计算准确
4. 优化了代码结构，使位置更新更加连贯
5. 提升了吸附效果的响应速度和准确性
6. 改进了平滑插值算法，使用二次函数代替线性插值，使吸附效果更加自然
7. 优化了鼠标位置和目标位置的计算逻辑，提高精确度
8. 增加了元素边缘之间的对齐检测和吸附功能（右边缘对左边缘、左边缘对右边缘、底边缘对顶边缘、顶边缘对底边缘）
9. 添加了水平和垂直方向的等间距检测，使元素排列更加整齐
10. 修复了水平对齐的类型标记错误，确保辅助线显示正确

## 版本 49

### 需求
- 元素对齐辅助线功能

### 完成事项
1. 添加了元素拖拽时的对齐辅助线功能
2. 支持水平和垂直方向的对齐参考线
3. 实现了左对齐、右对齐、中心对齐、顶部对齐、底部对齐等多种对齐方式
4. 添加了对齐阈值设置，使对齐更加精确
5. 优化了辅助线的视觉效果，使用绿色线条突出显示
6. 确保辅助线不影响元素的拖拽操作

### 修复问题
1. 优化了吸附效果的过渡动画
2. 添加了平滑插值计算，使元素移动更加顺滑
3. 扩大了过渡范围（10-20px），提供更好的用户体验
4. 修复了吸附时的"鬼畜"问题
5. 优化了位置计算逻辑，使吸附更加自然

## 版本 48

### 需求
- 优化拖动时的历史记录，使其成为一个连贯性动作

### 完成事项
1. 添加了拖动状态标记（isDragging）
2. 在拖动过程中不记录历史记录
3. 只在拖动结束时添加一次历史记录
4. 优化了历史记录的添加逻辑，避免在拖动过程中产生多余的记录
5. 确保拖动操作的连贯性

## 版本 47

### 需求
- 修复撤销/重做功能不完整的问题

### 完成事项
1. 修复了重做功能无法使用的问题
2. 添加了状态比较机制，避免重复添加相同的历史记录
3. 优化了历史记录的添加逻辑，只在真正的状态变化时添加
4. 修复了撤销/重做操作可能触发新历史记录的问题
5. 确保了历史记录状态的一致性

## 版本 46

### 需求
- 添加撤销/重做功能，保存在内存内，使用快捷键

### 完成事项
1. 添加了历史记录系统，支持最多 50 条历史记录
2. 实现了撤销功能（Ctrl+Z / Command+Z）
3. 实现了重做功能（Ctrl+Y / Command+Y 或 Ctrl+Shift+Z / Command+Shift+Z）
4. 优化了键盘事件处理逻辑，避免与文字编辑冲突
5. 添加了历史记录状态管理，确保操作的正确性
6. 在组件加载时自动初始化历史记录

## 版本 45

### 需求
- 增加更多的导出质量选项

### 完成事项
1. 在导出设置中增加了更多的质量选项：0.5x、1x、1.5x、2x、3x、4x、6x、8x
2. 提供了从缩小到超高清的多个选择
3. 优化了导出预览的计算逻辑，适配新的质量选项

## 版本 44

### 需求
- 导出时，调整颜色时添加防抖功能

### 完成事项
1. 添加了防抖函数，优化颜色调整时的性能
2. 将预览大小计算分为即时更新和防抖更新两种模式
3. 格式和质量变化时立即更新预览
4. 背景类型和颜色变化时使用 300ms 的防抖延迟
5. 优化了用户体验，避免频繁计算导致的卡顿

## 版本 43

### 需求
- 在导出预览中增加图片尺寸和缩略图信息

### 完成事项
1. 添加了图片尺寸显示（宽 × 高）
2. 添加了实时缩略图预览（40x40）
3. 优化了预览信息的布局和样式
4. 添加了相关的中英文翻译
5. 缩略图会根据图片比例自动调整显示

## 版本 42

### 需求
- 导出对话框打开时立即显示预览信息

### 完成事项
1. 修改 ExportDialog.vue，在对话框打开时立即计算并显示预览信息
2. 添加加载状态提示
3. 添加相关的中英文翻译
4. 优化了预览信息的显示逻辑

## 版本 41

### 需求
- 导出时添加设置弹窗，支持选择格式、大小、背景色等选项，并显示预览大小

### 完成事项
1. 创建了导出设置弹窗组件 ExportDialog.vue
2. 支持选择导出格式（PNG、JPEG、WebP）
3. 支持选择背景颜色（透明或纯色）
4. 支持选择导出质量（1x、2x、4x）
5. 实时显示预计文件大小
6. 添加了相关的中英文翻译文本
7. 优化了导出流程和用户体验

## 版本 40

### 需求
- 图片引入时保持它的透明度

### 完成事项
1. 修改了导出图片时的设置，将背景设置为透明（null）
2. 添加了导出时的 scale 参数，提高导出图片质量
3. 修改了画布容器的背景，使用棋盘格样式来显示透明区域
4. 确保导出的 PNG 图片保持透明度

## 版本 39

### 需求
- 修改应用图标和 HTML 标题，使其更加符合项目

### 完成事项
1. 更新了页面标题为"Emoji Maker - 表情制作器"
2. 创建了新的 SVG 图标，替换了默认的 favicon
3. 设计了一个简单而有趣的表情制作器图标
4. 图标包含了笑脸和编辑标记，体现了应用的功能

## 版本 38

### 需求
- 优化 backspace 和输入框的冲突问题

### 完成事项
1. 修改了键盘事件处理逻辑，避免在文字编辑状态下触发元素删除
2. 添加了对文字编辑状态的检查
3. 确保 backspace 键在文字编辑时只用于删除文字内容

## 版本 37

### 需求
- 修复项目构建问题

### 完成事项
1. 修改了 HomeView.vue，使用 EmojiMaker 组件替换 TheWelcome 组件
2. 删除了不需要的测试文件 HelloWorld.spec.ts
3. 成功完成项目构建，生成了生产环境代码

## 版本 36

### 需求
- 移除 @components 下和主线开发无关的组件

### 完成事项
1. 删除了 WelcomeItem.vue 组件
2. 删除了 HelloWorld.vue 组件
3. 删除了 TheWelcome.vue 组件
4. 删除了 icons 目录及其所有图标组件
5. 保留了主要的 EmojiMaker.vue 组件
6. 保留了 __tests__ 目录用于后续测试

## 版本 35

### 需求
- 修复图层面板的选择功能

### 完成事项
1. 修复了图层项的点击事件处理
2. 添加了事件冒泡阻止，确保点击事件不被父元素捕获
3. 确保点击图层时可以正确选中对应的元素

## 版本 34

### 需求
- 修复文字编辑的持久化问题

### 完成事项
1. 修改了文字编辑完成时的处理逻辑
2. 在编辑完成时获取并保存文字内容
3. 确保文字内容被正确保存到 localStorage
4. 添加了空文本的默认值处理

## 版本 33

### 需求
- 修复更多未翻译的界面文本

### 完成事项
1. 修改了边框样式选择器的标签和选项，使用多语言文本
2. 修改了默认的文字编辑提示，使用多语言文本
3. 确保所有用户界面文本都支持中英文切换

## 版本 32

### 需求
- 修复界面中未翻译的英文文本

### 完成事项
1. 修改了图片的 alt 属性，使用多语言文本
2. 检查了所有组件中的文本，确认其他文本都已正确翻译
3. 保留了必要的英文内容（如 HTML 标准属性、字体名称等）

## 版本 31

### 需求
- 修复 language.ts 中的对象索引类型错误

### 完成事项
1. 添加了 TranslationObject 类型定义，支持递归的字符串索引
2. 优化了 Messages 类型，使其支持任意深度的嵌套翻译对象

## 版本 30

### 需求
- 修复 language.ts 中的 TypeScript linter 错误

### 完成事项
1. 将 result 变量的类型从 any 改为更精确的 Messages | string 类型
2. 优化了类型安全性，避免使用 any 类型

## 版本 29

### 需求
- 修复 pnpm build 时的 TypeScript 类型错误

### 完成事项
1. 修复了 language.ts 文件中的类型错误
2. 优化了多语言翻译函数的类型定义
3. 成功完成项目构建

## 版本 28

### 需求
- 实现语言设置的持久化存储

### 完成事项
1. 在 language store 中添加了持久化功能
2. 使用 localStorage 存储用户的语言选择
3. 添加了 LANGUAGE_STORAGE_KEY 常量用于存储
4. 实现了 getSavedLanguage 函数用于读取保存的语言设置
5. 在 setLanguage 函数中添加了自动保存功能
6. 初始化时自动读取上次保存的语言设置

## 版本 27

### 需求
- 在网页中添加 GitHub 主页地址跳转

### 完成事项
1. 在页面顶部添加了 GitHub 仓库链接按钮
2. 使用与语言切换按钮相同的样式设计
3. 优化了顶部按钮的布局，使用 flex 布局对齐
4. 添加了按钮悬停效果
5. 确保链接在新标签页中打开

## 版本 26

### 需求
- 将中英文 README 分成两个独立文件

### 完成事项
1. 创建了独立的英文 README 文件 (README.en.md)
2. 保留原有的中文 README 文件 (README.md)
3. 更新了文件间的相互链接
4. 优化了文档结构，恢复为一级标题
5. 确保两个文件的内容完全对应

## 版本 25

### 需求
- 添加双语 README 文件

### 完成事项
1. 添加了英文版本的 README 内容
2. 保留了原有的中文内容
3. 添加了语言切换导航
4. 优化了文档结构，将一级标题改为二级标题
5. 确保中英文内容的完整对应

## 版本 24

### 需求
- 添加双语支持，在 ts 中定义双语语料，添加英文版支持

### 完成事项
1. 创建了语言管理 store (language.ts)
2. 添加了中英文语言包 (zh.ts, en.ts)
3. 在 App.vue 中添加了语言切换功能
4. 更新了 EmojiMaker 组件，支持多语言显示
5. 所有界面文本都已支持中英文切换

## 版本 23

### 需求
- 修复 TypeScript 类型检查错误，使项目能够正常构建

### 完成事项
1. 修复了 selectedElement 的空值检查问题
2. 为所有可能为 undefined 的属性添加了默认值
3. 添加了非空断言操作符到必要的地方
4. 优化了旋转角度的显示，添加了度数符号
5. 确保项目可以正常构建和部署

## 版本 22

### 需求
- 添加 GitHub Actions 自动部署功能

### 完成事项
1. 创建 GitHub Actions 工作流配置文件 .github/workflows/deploy.yml
2. 配置自动构建和部署到 GitHub Pages
3. 修改 vite.config.ts，添加 base 配置以支持 GitHub Pages 部署
4. 使用 pnpm 作为包管理工具进行部署

## 版本 21

### 需求
- 优化拖放功能，使元素初始位置与鼠标释放位置一致
- 优化拖放提示的显示效果

### 完成事项
1. 修改了拖放处理函数，使元素初始位置与鼠标释放位置对应
2. 优化了拖放提示的样式，使其更加清晰可见
3. 调整了拖放提示的层级，确保其显示在最上层
4. 优化了元素添加函数，支持自定义初始位置
5. 添加了相对于画布的位置计算逻辑

## 版本 20

### 需求
- 合适的位置添加修改图层的方式，比如左部添加一个图层按钮对应元素，然后可以拖动排序

### 完成事项
1. 添加了左侧图层管理面板
2. 实现了图层的拖拽排序功能
3. 为每个图层添加了可见性控制按钮
4. 使用图标区分文字和图片图层
5. 优化了图层的选中状态视觉反馈
6. 支持通过图层面板快速选择和管理元素
7. 调整了整体布局以适应新的图层面板

## 版本 19

### 需求
- 添加透明底色的聊天气泡样式

### 完成事项
1. 添加了透明底色的聊天气泡样式（左右两个方向）
2. 使用双层伪元素实现了气泡尾巴的边框效果
3. 保持了与文字颜色相同的边框颜色
4. 优化了气泡的视觉效果
5. 更新了边框样式选择器的选项

## 版本 18

### 需求
- 聊天气泡多添加几个样式

### 完成事项
1. 添加了多种颜色的聊天气泡：绿色、蓝色、灰色
2. 为每种颜色的聊天气泡添加了左右两个方向的样式
3. 优化了聊天气泡的视觉效果
4. 移除了原有的单一聊天气泡样式
5. 更新了边框样式选择器的选项

## 版本 17

### 需求
- 文本可以自由选择添加边框，比如聊天框之类的样式

### 完成事项
1. 添加了文本边框样式选择功能
2. 支持多种边框样式：无边框、聊天气泡、圆角边框、方形边框、阴影边框
3. 为每种边框样式添加了相应的 CSS 样式
4. 优化了文本元素的样式应用逻辑
5. 确保边框样式在编辑状态下保持不变

## 版本 16

### 需求
- 选中状态下，可以点击 del，mac用户点击删除键来删除画布中的控件

### 完成事项
1. 添加了键盘事件监听器，支持使用 Delete 和 Backspace 键删除选中的元素
2. 确保只有在有元素被选中时才响应删除键
3. 优化了键盘事件的处理逻辑
4. 在组件卸载时正确移除了事件监听器

## 版本 15

### 需求
- 移除字体编辑功能

### 完成事项
1. 移除了字体选择器组件
2. 移除了字体相关的样式定义
3. 移除了字体更新函数
4. 移除了字体相关的类型定义
5. 简化了文字样式设置

## 版本 14

### 需求
- 继续修复文字样式设置问题

### 完成事项
1. 修复了文字元素样式继承问题
2. 确保文字元素在编辑状态下保持字体样式
3. 添加了文字元素的最小宽度
4. 优化了文字元素的显示方式为 inline-block
5. 确保字号、字体和颜色同时生效

## 版本 13

### 需求
- 修复文字字体设置不生效的问题

### 完成事项
1. 修复了字体样式的绑定方式
2. 移除了不正确的字体继承设置
3. 确保字体样式直接应用到文字元素上
4. 优化了样式绑定的结构

## 版本 12

### 需求
- 文字设置时允许修改文字的字体和颜色

### 完成事项
1. 添加了字体选择功能，支持常用中英文字体
2. 添加了颜色选择器，支持自定义文字颜色
3. 优化了文字元素的样式继承
4. 确保字体设置实时生效
5. 添加了字体选择下拉框和颜色选择器的样式美化

## 版本 11

### 需求
- 优化小屏幕下的画布显示
- 保持画布 1:1 比例

### 完成事项
1. 使用 vmin 单位重新设计画布大小
2. 设置画布大小为视口最小边的 90%
3. 保持最大尺寸 800px 的限制
4. 工具栏宽度跟随画布大小自动调整
5. 移除了不必要的媒体查询

## 版本 10

### 需求
- 修复左侧空白问题
- 优化整体布局居中

### 完成事项
1. 将所有 100vw 改为 100%，避免水平滚动
2. 优化了 main 元素的布局，添加 justify-content: center
3. 调整了画布容器的响应式设计
4. 修复了工具栏宽度问题
5. 优化了页面各部分的内边距

## 版本 9

### 需求
- 修复 App 组件宽度限制问题

### 完成事项
1. 调整了 body 元素样式，设置为 100vw 宽度
2. 优化了 .app 容器的布局，使用 flex 布局
3. 修改了 main 元素的样式，使其完全填充可用空间
4. 确保了所有容器都能正确响应屏幕宽度
5. 移除了不必要的样式属性

## 版本 8

### 需求
- 使整体宽度充满屏幕
- 限制画布大小为 800px

### 完成事项
1. 调整了整体容器宽度为 100vw，完全充满视口宽度
2. 将画布尺寸限制为最大 800px
3. 移除了多余的边距和圆角，使布局更加紧凑
4. 优化了工具栏的布局和间距
5. 保持了工具栏内容的最大宽度为 800px，与画布对齐

## 版本 7

### 需求
- 优化整体布局，使其更好地适应浏览器窗口
- 保持画布 1:1 比例
- 确保工具栏始终可见

### 完成事项
1. 调整了整体容器高度为 100vh，完全充满视口
2. 优化了画布大小计算方式，自动适应可用空间
3. 改进了工具栏样式，添加了固定边距和圆角
4. 优化了内容溢出处理，防止布局错乱
5. 确保了工具栏按钮文字不会换行

## 版本 6

### 需求
- 优化大屏幕下的画布显示问题

### 完成事项
1. 调整了画布的最大宽度限制，从 800px 提升到 1200px
2. 保持了画布宽度为视窗宽度的 80% 的设置
3. 优化了大屏幕下的显示效果

## 版本 5

### 需求
- 添加元素旋转功能
- 优化控制面板布局

### 完成事项
1. 为图片和文字添加了旋转功能，支持 0-360 度旋转
2. 将控制面板改为悬浮显示，不影响主布局
3. 优化了控制面板的样式和交互
4. 添加了旋转角度显示
5. 设置了元素旋转的变换原点为中心点
6. 优化了选中状态的视觉反馈

## 版本 4

### 需求
- 添加元素大小调整功能
- 优化元素控制体验

### 完成事项
1. 为图片添加了大小调整滑块，支持 50px 到 500px 的尺寸调整
2. 为文字添加了字号调整滑块，支持 12px 到 72px 的字号调整
3. 添加了元素删除功能，可以删除不需要的图片或文字
4. 优化了控制器的显示逻辑，只在鼠标悬停时显示
5. 为控制器添加了样式美化，包括半透明背景和阴影效果
6. 图片大小调整时保持宽高比例

## 版本 3

### 需求
- 优化页面布局
- 提升用户体验

### 完成事项
1. 将布局改为上下结构，画布在上方，工具栏在下方
2. 优化了画布尺寸，设置为正方形且自适应屏幕大小
3. 工具栏按钮改为横向排列，更符合操作习惯
4. 调整了页面尺寸和间距，使其占满整个视口
5. 优化了组件样式，添加阴影效果提升层次感
6. 移除了多余的标题，使界面更加简洁

## 版本 2

### 需求
- 实现基本的表情制作功能
- 支持图片上传和拖拽
- 支持添加和编辑文字
- 支持导出表情图片

### 完成事项
1. 创建了 EmojiMaker 组件作为主要功能组件
2. 实现了图片上传功能，支持多图片上传
3. 实现了图片和文字的拖拽功能
4. 实现了文字添加和双击编辑功能
5. 使用 html2canvas 实现了表情导出功能
6. 优化了界面样式，提供了更好的用户体验

## 版本 1

### 需求
- 初始化项目
- 创建基本项目结构
- 设置开发日志系统

### 完成事项
1. 创建了 development.log 文件用于记录开发进度
2. 创建了 dev.version 文件用于记录内部版本号
3. 确认了现有的项目结构，包含了必要的配置文件
4. 项目使用 Vue 3 + TypeScript + Vite 技术栈

## 版本 87 - 2024-03-21

### 需求
- 抽取持久化存储模块，统一管理所有持久化功能

### 完成事项
1. 创建 persistStore 统一管理持久化存储
2. 将元素数据持久化功能从 EmojiMaker 组件移到 persistStore
3. 将历史记录管理功能从 EmojiMaker 组件移到 persistStore
4. 将辅助功能状态持久化从 assistStore 移到 persistStore
5. 将语言设置持久化从 languageStore 移到 persistStore
6. 修改相关组件使用新的 persistStore
7. 优化了代码结构，提高了可维护性

# Emoji Maker 开发日志

